*this的指向在函数创建的时候是决定不了的，在调用的时候才能决定，谁调用的就指向谁
*如果一个函数中有this，但是它没有被上一级的对象所调用，那么this指向的就是window
*如果一个函数中有this，这个函数有被上一级的对象所调用，那么this指向的就是上一级的对象
*如果一个函数中有this，这个函数中包含多个对象，尽管这个函数是被最外层的对象所调用，
this指向的也只是它上一级的对象
*this永远指向的是最后调用它的对象，也就是看它执行的时候是谁调用的
*当this碰到return时：
  如果返回值是一个对象，那么this指向的就是那个返回的对象，如果返回值不是一个对象那么this还是指向函数的实例
*1.在严格版中的默认的this不再是window，而是undefined